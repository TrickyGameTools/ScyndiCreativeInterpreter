// License Information:
// SCI_Exe/IntLibs/SCI/InterVar.scyndi
// Scyndi's Creative Interpreter - InterVar linkup code
// version: 23.01.16
// Copyright (C) 2023 Jeroen P. Broks
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

Var GewoonNiks = Lua.SCI_InitAPI(Lua.SCI_StateName,"InterVar")

global const int ivt_bool = 1
global const int ivt_int  = 2
global const int ivt_str  = 3
global const int ivt_boolean = 1
global const int ivt_integer = 2
global const int ivt_string  = 3

plua IV_S(s,string K,V)
	Lua.InterVar.Define(s["*__Tag"],s["*__Type"],upper(K),s["*__Type"],V)
end

plua IV_G(s,string K)
	return Lua.InterVar.Check(s["*__Tag"],s["*__Type"],upper(K),s["*__Type"])
end

class TInterVar
	ReadOnly String Tag
	ReadOnly Table iInt
	ReadOnly Table iBool
	ReadOnly Table iStr
		
	Get String Source
		return Lua.InterVar.UnParse(Tag)
	End
	
	Set String Source
		Lua.InterVar.Parse(Tag,Value)
	End
	
	Constructor(String _T)
		Tag = _T
		iInt  = SetMetaTable({["*__Tag"]=_T, ["*__Type"]=ivt_int },{["__newindex"]=IV_S,["__index"]=IV_G })
		iBool = SetMetaTable({["*__Tag"]=_T, ["*__Type"]=ivt_bool},{["__newindex"]=IV_S,["__index"]=IV_G })
		iStr  = SetMetaTable({["*__Tag"]=_T, ["*__Type"]=ivt_str },{["__newindex"]=IV_S,["__index"]=IV_G })
	End
End

plua _ivglob = new TInterVar("*GENERAL")

readonly table gBool = _ivglob.iBool
readonly table gInt  = _ivglob.iInt
readonly table gStr  = _ivglob.iStr

QuickMeta Done
	newindex
		error("Done is readonly!")
	end
	
	index
		bool ret
		ret = gbool[key]
		gbool[key]=true
		return ret
	end
end