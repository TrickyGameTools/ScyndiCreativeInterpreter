// License Information:
// SCI_Exe/IntLibs/SCI/JCR6.scyndi
// Scyndi's Creative Interpreter - JCR6 Script
// version: 23.10.04
// Copyright (C) 2023 Jeroen P. Broks
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Module

class JCR6Entry
	readonly string Entry
	readonly int RealSize
	readonly int CompressedSize
	readonly string Storage
	
	Constructor(String E,int RS, int CS,String S)
		Entry,RealSize,CompressedSize,Storage = E,RS,CS,S
	End
End
	
Var GewoonNiks = Lua.SCI_InitAPI(Lua.SCI_StateName,"JCR6")

const delegate LoadDir = Lua.JCR6.GetJCR

const delegate DirSize = Lua.JCRGetSize

Var DirIndex(int idx,string Tag="*MAIN")
	return Lua.JCR6.JCRGetEntry(idx,Tag)
end

Var DirEntry(int idx, string Tag="*MAIN")
	return New JCREntry(DirIndex(idx,Tag))
End

String GetString(string Ent,String Tag="*MAIN")
	return Lua.JCR6.JCRGetString(Tag,Ent)
End

Var Dir(String Directory,String Tag="*MAIN")
	plua Ret = {}
	plua fil
	Fil = Lua.JCR6.JCRFindFirst(Tag,Directory)
	While Fil
		Ret[Len(Ret)] = Fil
		Fil = Lua.JCR6.JCRFindNext()
	End
	Return Ret
End