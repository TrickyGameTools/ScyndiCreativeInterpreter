// License Information:
// SCI_Exe/IntLibs/SCI/Sys.scyndi
// Scyndi's Creative Interpreter - Sys Module
// version: 23.11.03
// Copyright (C) 2023 Jeroen P. Broks
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

module

Var GewoonNiks = Lua.SCI_InitAPI(Lua.SCI_StateName,"DebugConsole")

Const String StateName = Lua.SCI_StateName

const delegate Exit = Lua.Exit
const delegate GoToFlow = Lua.SCI_GoToFlow
const delegate LoadFlow = Lua.SCI_LoadFlow
const delegate LoadNewFlow = Lua.SCI_LoadNewFlow
const delegate LoadState = Lua.SCI_LoadState
const delegate LoadNewState = Lua.SCI_LoadNewState
const delegate LoadStateNew = Lua.SCI_LoadNewState
const delegate DontFlip = Lua.SCI_DontFlip
const delegate OpenURL = Lua.SCI_OpenURL
const delegate HasState = Lua.SCI_HasState
const delegate Call = Lua.SCI_Call
const delegate Yes = Lua.SCI_Yes

global const delegate CSay = Lua.CSay
global const delegate CSayF = Lua.CSayF
global const delegate CSaySetConfig = Lua.SCI_CSaySetConfig

const delegate ATAN2 = Lua.SCI_ATAN2


void TraceBack()
	Lua.SCI_Traceback(StateName)
End

get string CurrentFlow
	Return Lua.SCI_CurrentFlow()
end

get string BuildState
	return Lua.SCI_BuildState()
end

void ConsoleGlobal(String Cmd,String Func)
	Lua.DebugConsole.DefDebugConsole(Cmd,"DEBUG_GLOBAL",Func)
end

void ConsoleLocal(String Cmd,String Func)
	Lua.DebugConsole.DefDebugConsole(Cmd,StateName,Func)
end

// It goes without saying that calling this in anything other than a debug console command is pretty pointless!
Const Delegate EndConsole = Lua.DebugConsole.EndConsole 

global const delegate GoToFlow = Lua.SCI_GoToFlow